@using BusinessObject.Commons;
@using Newtonsoft.Json;
@model Job
@{
    ViewData["Title"] = "Edit Job Post";
    Layout = "_LayoutE_Manager";

    var httpContext = Context.Request.HttpContext;
    var userJson = httpContext.Session.GetString(Enums.SESSION_KEY_EMPLOYER);
    Employer currentUser = null!;
    if (userJson != null)
    {
        currentUser = JsonConvert.DeserializeObject<Employer>(userJson);
    }
}

<div class="container mt-3">
    <h2 class="text-center mb-3">Edit Job Post</h2>
    <hr class="mb-4" />
    <div class="container-fluid">
        <div class="row mb-3">
            <div class="col">
                <label asp-for="JobId" class="form-label"><strong>ID</strong></label>
                <input asp-for="JobId" type="text" class="form-control" id="jobId" readonly />
                <span asp-validation-for="JobId" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label asp-for="Title" class="form-label">
                    <strong>Job Title</strong> <span class="text-danger">*</span>
                </label>
                <input asp-for="Title" type="text" class="form-control" id="title">
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label asp-for="Description" class="form-label">
                    <strong>Job Description</strong> <span class="text-danger">*</span>
                </label>
                <textarea asp-for="Description" class="form-control" id="description" rows="4"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="industry" class="form-label">
                    <strong>Industry</strong>
                </label>
                <input type="text" class="form-control" id="industry" name="industry" required>
            </div>

            <div class="col">
                <label for="location" class="form-label">
                    <strong>Location</strong>
                </label>
                <input type="text" class="form-control" id="location" name="location">
            </div>

            <div class="col">
                <label asp-for="ApplicationDeadline" class="form-label">
                    <strong>Application Deadline</strong> <span class="text-danger">*</span>
                </label>
                <input asp-for="ApplicationDeadline" type="datetime-local" class="form-control" id="applicationDeadline" required>
                <span asp-validation-for="ApplicationDeadline" class="text-danger"></span>
                <span id="validationAlert" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="requiredSkills" class="form-label">
                    <strong>Required Skills</strong>
                </label>
                <input type="text" class="form-control" id="requiredSkills" name="requiredSkills">
            </div>

            <div class="col">
                <label for="requiredEducation" class="form-label">
                    <strong>Required Education</strong>
                </label>
                <input type="text" class="form-control" id="requiredEducation" name="requiredEducation">
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="salary" class="form-label">
                    <strong>Salary</strong>
                </label>
                <input type="number" class="form-control" id="salary" name="salary">
            </div>

            <div class="col">
                <label for="timeType" class="form-label">
                    <strong>Time Type</strong>
                </label>
                <select class="form-select" id="timeType" name="timeType" required>
                    @foreach (var value in Enum.GetValues(typeof(TimeType)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
            </div>
        </div>

        <button type="button" class="btn btn-primary" id="EditJob">Submit</button>
        <a href="@Url.Action("Manager", "Employer")" type="button" class="btn btn-danger">Cancel</a>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            GetJobById();

            function GetJobById() {
                var params = new URLSearchParams(window.location.search);
                var jobId = params.get("jobId");

                $.ajax({
                    url: "http://localhost:5090/odata/Job/" + jobId,
                    type: "GET",
                    contentType: "application/json",
                    success: function (result, status, xhr) {
                        $("#jobId").val(result.jobId);
                        $("#title").val(result.title);
                        $("#description").val(result.description);
                        $("#industry").val(result.industry);
                        $("#location").val(result.location);
                        $("#applicationDeadline").val(result.applicationDeadline);
                        $("#requiredSkills").val(result.requiredSkills);
                        $("#requiredEducation").val(result.requiredEducation);
                        $("#salary").val(result.salary);
                        var timeTypeDropdown = $("#timeType");
                        timeTypeDropdown.empty();

                        var timeTypeEnum = {
                            "FullTime": 0,
                            "PartTime": 1,
                            "Contract": 2,
                            "Internship": 3,
                            "Temporary": 4,
                            "Remote": 5
                        };

                        $.each(timeTypeEnum, function (key, value) {
                            timeTypeDropdown.append($("<option>").text(key).val(value));
                        });

                        timeTypeDropdown.val(result.timeType);
                    },
                    error: function (xhr, status, error) {
                        console.log('Error loading job data', xhr);
                    }
                });
            }

            $("#EditJob").click(function (e) {
                e.preventDefault();
                var jobId = $("#jobId").val();

                var currentDate = new Date();
                var applicationDeadline = new Date($("#applicationDeadline").val());

                if (applicationDeadline < currentDate) {
                    $("#validationAlert").html("Application Deadline must be greater than the current date");
                    $("#validationAlert").addClass("show");
                    return;
                }
                $("#validationAlert").removeClass("show");

                var timeTypeString = $("#timeType").val();
                var timeTypeEnum = {
                    "FullTime": 0,
                    "PartTime": 1,
                    "Contract": 2,
                    "Internship": 3,
                    "Temporary": 4,
                    "Remote": 5
                };

                var timeTypeInt = timeTypeEnum[timeTypeString];

                $.ajax({
                    url: "http://localhost:5090/odata/Job/" + jobId,
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify({
                        JobId: jobId,
                        Title: $("#title").val(),
                        Description: $("#description").val(),
                        Industry: $("#industry").val(),
                        Location: $("#location").val(),
                        ApplicationDeadline: $("#applicationDeadline").val(),
                        RequiredSkills: $("#requiredSkills").val(),
                        RequiredEducation: $("#requiredEducation").val(),
                        Salary: $("#salary").val(),
                        TimeType: timeTypeInt,
                        Status: true,
                        EmployerId: '@currentUser.EmployerId'
                    }),
                    success: function (result) {
                        console.log("Job with ID " + jobId + " has been updated successfully.");

                        setTimeout(function () {
                            window.location.href = "http://localhost:5063/Employer/Manager";
                        }, 1000);
                    },
                    error: function (error) {
                        console.log("Error updating job with ID " + jobId + ": ", error);
                    }
                });
            });
        });
    </script>
}