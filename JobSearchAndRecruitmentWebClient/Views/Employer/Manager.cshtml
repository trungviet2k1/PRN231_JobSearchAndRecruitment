@using BusinessObject.Commons;
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Employers";
    Layout = "_LayoutE_Manager";

    var httpContext = Context.Request.HttpContext;
    var userJson = httpContext.Session.GetString(Enums.SESSION_KEY_EMPLOYER);
    Employer currentUser = null;
    if (userJson != null)
    {
        currentUser = JsonConvert.DeserializeObject<Employer>(userJson);
    }
}

<div class="row mt-3">
    <div class="col-6">
        <h2>Jobs</h2>
    </div>
    <div class="col-6 text-end">
        <a href="@Url.Action("NewJobPost", "Employer")" class="btn btn-primary">Jobs Post</a>
    </div>
</div>

<div class="row mt-3">
    <div class="col-6">
        <div class="input-group">
            <span class="input-group-text">Filter:</span>
        </div>
    </div>
    <div class="col-6 d-flex justify-content-end">
        <div class="dropdown" style="padding-right: 10px;">
            <button type="button" class="btn btn-outline-info dropdown-toggle" data-bs-toggle="dropdown">
                Sorted by:
            </button>
            <ul class="dropdown-menu" id="sortByDropdown">
                <li><a class="dropdown-item" href="#" data-sort-by="submitted">Date submitted</a></li>
                <li><a class="dropdown-item" href="#" data-sort-by="title">Title</a></li>
                <li><a class="dropdown-item" href="#" data-sort-by="status">Jobs status</a></li>
            </ul>
        </div>
        <div class="dropdown" style="padding-left: 10px;">
            <button type="button" class="btn btn-outline-info dropdown-toggle" data-bs-toggle="dropdown">
                Order by:
            </button>
            <ul class="dropdown-menu" id="orderByDropdown">
                <li><a class="dropdown-item" data-sort-order="desc">Descending</a></li>
                <li><a class="dropdown-item" data-sort-order="asc">Ascending</a></li>
            </ul>
        </div>
    </div>
</div>

<div class="row mt-3">
    <table class="table table-sm table-striped table-bordered m-2">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Description</th>
                <th>Industry</th>
                <th>Job Posting Date</th>
                <th>Form of work</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class="col-12 text-center pagination-container">
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function getCount() {
            $.ajax({
                url: "http://localhost:5090/odata/Job/$count",
                type: "GET",
                contentType: "application/json",
                success: function (countResult) {
                    var totalItems = parseInt(countResult);
                    loadJobs(totalItems);
                },
                error: function (error) {
                    console.log('Error getting count:', error);
                }
            });
        }

        $(document).ready(function () {
            var currentSortField = "";
            var currentSortOrder = "";

            var itemsPerPage = 10;
            var currentPage = 1;

            $("#sortByDropdown a").click(function (e) {
                e.preventDefault();
                var sortBy = $(this).data("sort-by");
                sortTable(sortBy);
                loadJobs();
            });

            $("#orderByDropdown a").click(function (e) {
                e.preventDefault();
                var sortOrder = $(this).data("sort-order");
                sortTableOrder(sortOrder);
                updateOrderByButtonText(sortOrder);
                loadJobs();
            });

            function sortTable(sortBy) {
                var rows = $("tbody tr").get();

                rows.sort(function (a, b) {
                    var keyA = $(a).find("td").eq(getColumnIndex(sortBy)).text().toUpperCase();
                    var keyB = $(b).find("td").eq(getColumnIndex(sortBy)).text().toUpperCase();

                    if (keyA < keyB) return -1;
                    if (keyA > keyB) return 1;
                    return 0;
                });

                if (sortBy === currentSortField) {
                    rows.reverse();
                    currentSortOrder = currentSortOrder === "asc" ? "desc" : "asc";
                } else {
                    currentSortOrder = "asc";
                }
                currentSortField = sortBy;
                $("tbody").html(rows);
            }

            function sortTableOrder(sortOrder) {
                var rows = $("tbody tr").get();

                rows.sort(function (a, b) {
                    var keyA = $(a).find("td").eq(getColumnIndex(currentSortField)).text().toUpperCase();
                    var keyB = $(b).find("td").eq(getColumnIndex(currentSortField)).text().toUpperCase();

                    if (sortOrder === "asc") {
                        return keyA.localeCompare(keyB);
                    } else {
                        return keyB.localeCompare(keyA);
                    }
                });
                currentSortOrder = sortOrder;
                $("tbody").html(rows);
            }

            function getColumnIndex(columnName) {
                return $("thead th").index($("thead th:contains('" + columnName + "')"));
            }

            function updateOrderByButtonText(sortOrder) {
                var orderText = sortOrder === "asc" ? "Ascending" : "Descending";
                $("#orderByDropdown button").html("Order by: " + orderText);
            }

            loadJobs();

            function loadJobs(totalItems) {
                $("table tbody").html("");
                var employerId = '@currentUser.EmployerId';
                var topValue = itemsPerPage;
                var skipValue = (currentPage - 1) * itemsPerPage;

                $.ajax({
                    url: "http://localhost:5090/odata/Job?$filter=EmployerId eq " + employerId,
                    type: "GET",
                    contentType: "application/json",
                    success: function (result, status, xhr) {
                        console.log('Data received:', result.value);
                        $.each(result.value, function (index, value) {
                            $("tbody").append($("<tr>"));
                            console.log(value);
                            appendElement = $("tbody tr").last();
                            appendElement.append($("<td>").html(value["JobId"]));
                            appendElement.append($("<td>").html(value["Title"]));
                            appendElement.append($("<td>").html(value["Description"]));
                            appendElement.append($("<td>").html(value["Industry"]));
                            appendElement.append($("<td>").html(value["CreateDate"]));
                            appendElement.append($("<td>").html(value["TimeType"]));

                            var statusText = value["Status"] === true ? "Đang mở" : "Đã đóng";
                            var statusClass = value["Status"] === true ? "text-success" : "text-danger";
                            appendElement.append($("<td>").addClass(statusClass).html(statusText));

                            updateJobStatusBasedOnDeadline(value);
                        });
                        renderPagination(totalItems);
                    },
                    error: function (error) {
                        console.log('Error loading jobs', error);
                    }
                });
            }

            function updateJobStatusBasedOnDeadline(job) {
                var currentDate = new Date();
                var deadline = new Date(job["applicationDeadline"]);

                if (deadline < currentDate) {
                    $.ajax({
                        url: "http://localhost:5090/odata/Job/" + job["JobId"],
                        type: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify({ Status: false }),
                        success: function (result) {
                            if (result.success) {
                                $("td[data-column='Status'][data-job-id='" + job["JobId"] + "']")
                                    .removeClass("text-success")
                                    .addClass("text-danger")
                                    .html("Đã đóng");
                            }
                        },
                        error: function (error) {
                            console.log('Error updating job status', error);
                        }
                    });
                }
            }

            function renderPagination(totalItems) {
                var totalPages = Math.ceil(totalItems / itemsPerPage);
                var paginationHtml = '<nav aria-label="Page navigation"><ul class="pagination">';
                for (var i = 1; i <= totalPages; i++) {
                    paginationHtml += '<li class="page-item' + (i === currentPage ? ' active' : '') + '"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>';
                }
                paginationHtml += '</ul></nav>';

                $(".pagination-container").html(paginationHtml);

                $(".pagination a").click(function (e) {
                    e.preventDefault();
                    currentPage = parseInt($(this).data("page"));
                    getCount();
                });
            }

            getCount();
        });
    </script>
}