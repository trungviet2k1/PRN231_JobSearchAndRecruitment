// <auto-generated />
using System;
using BusinessObject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(PRN231_ProjectDbContext))]
    partial class PRN231_ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("acc_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_address");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_name");

                    b.Property<int?>("comp_id")
                        .HasColumnType("int");

                    b.Property<int?>("job_seeker_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("comp_id");

                    b.HasIndex("job_seeker_id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BusinessObject.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("comp_address");

                    b.Property<string>("CompanyLogoUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comp_logoURL");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("comp_name");

                    b.Property<string>("CompanyPhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comp_phone");

                    b.HasKey("Id");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDeadline")
                        .HasColumnType("datetime2")
                        .HasColumnName("application_deadline");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_description");

                    b.Property<string>("JobRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_requirements");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("job_location");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("job_salary");

                    b.Property<int>("TimeType")
                        .HasColumnType("int")
                        .HasColumnName("job_time_type");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("job_title");

                    b.Property<int?>("comp_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("comp_id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.JobApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("application_status");

                    b.Property<int?>("job_id")
                        .HasColumnType("int");

                    b.Property<int?>("job_seeker_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("job_id");

                    b.HasIndex("job_seeker_id");

                    b.ToTable("JobApplicants");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSeeker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_seeker_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("ResumeUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resume_url");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("skills");

                    b.HasKey("Id");

                    b.ToTable("JobSeekers");
                });

            modelBuilder.Entity("BusinessObject.Models.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resume_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resume_content");

                    b.Property<string>("ResumeUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resume_url");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("resume_title");

                    b.Property<int?>("job_seeker_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("job_seeker_id");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("BusinessObject.Models.Account", b =>
                {
                    b.HasOne("BusinessObject.Models.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("comp_id");

                    b.HasOne("BusinessObject.Models.JobSeeker", "JobSeeker")
                        .WithMany()
                        .HasForeignKey("job_seeker_id");

                    b.Navigation("Employer");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.HasOne("BusinessObject.Models.Employer", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("comp_id");

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("BusinessObject.Models.JobApplicant", b =>
                {
                    b.HasOne("BusinessObject.Models.Job", "Job")
                        .WithMany("JobApplicants")
                        .HasForeignKey("job_id");

                    b.HasOne("BusinessObject.Models.JobSeeker", "JobSeeker")
                        .WithMany()
                        .HasForeignKey("job_seeker_id");

                    b.Navigation("Job");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("BusinessObject.Models.Resume", b =>
                {
                    b.HasOne("BusinessObject.Models.JobSeeker", "JobSeeker")
                        .WithMany("Resumes")
                        .HasForeignKey("job_seeker_id");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("BusinessObject.Models.Employer", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.Navigation("JobApplicants");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSeeker", b =>
                {
                    b.Navigation("Resumes");
                });
#pragma warning restore 612, 618
        }
    }
}
